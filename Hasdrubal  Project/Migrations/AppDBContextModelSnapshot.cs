// <auto-generated />
using System;
using Hasdrubal__Project.DBConnection;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hasdrubal__Project.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Hasdrubal__Project.Models.Acquisation", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("CertificatAuthentication")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DateAcq")
                        .HasColumnType("int");

                    b.Property<int>("LieuAcq")
                        .HasColumnType("int");

                    b.Property<int>("MoyenAcq")
                        .HasColumnType("int");

                    b.Property<string>("PreuveAchat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Prix")
                        .HasColumnType("int");

                    b.Property<int>("PropriétaireActuel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Acquisations");
                });

            modelBuilder.Entity("Hasdrubal__Project.Models.Artiste", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Biographie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("LieuNaissance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationalite")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Artistes");
                });

            modelBuilder.Entity("Hasdrubal__Project.Models.Bibliographie", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatePublication")
                        .HasColumnType("datetime2");

                    b.Property<string>("Editeur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomAuteur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Page")
                        .HasColumnType("int");

                    b.Property<string>("Publications")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitreOuvrage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bibliographies");
                });

            modelBuilder.Entity("Hasdrubal__Project.Models.ConservationLocation", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Lieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModeStockage")
                        .HasColumnType("int");

                    b.Property<string>("PlaceDepot")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConservationLocations");
                });

            modelBuilder.Entity("Hasdrubal__Project.Models.Exposition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contraintes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitreExpo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Expositions");
                });

            modelBuilder.Entity("Hasdrubal__Project.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Copyright")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DroitsPhotographiques")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OeuvreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OeuvreId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Hasdrubal__Project.Models.Oeuvre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtisteId")
                        .HasColumnType("int");

                    b.Property<int>("DateCreation")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dimensions2D")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dimensions3D")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Materiaux")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NbElements")
                        .HasColumnType("int");

                    b.Property<string>("NomArtiste")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroTitrage")
                        .HasColumnType("int");

                    b.Property<int>("Poid")
                        .HasColumnType("int");

                    b.Property<string>("PresnomArtiste")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Support")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeTitrage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArtisteId");

                    b.ToTable("Oeuvres");
                });

            modelBuilder.Entity("Hasdrubal__Project.Models.Pret", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateDepart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRetour")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExpositionId")
                        .HasColumnType("int");

                    b.Property<string>("Institution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomExpo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OeuvreId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExpositionId");

                    b.HasIndex("OeuvreId");

                    b.ToTable("Prets");
                });

            modelBuilder.Entity("Hasdrubal__Project.Models.Redaction", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateModification")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRedaction")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomRedacteur")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Redactions");
                });

            modelBuilder.Entity("Hasdrubal__Project.Models.Restauration", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Cause")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Constat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateRestauration")
                        .HasColumnType("datetime2");

                    b.Property<string>("LieuRestauration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Materiaux")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomRestauration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeIntervention")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Restaurations");
                });

            modelBuilder.Entity("Hasdrubal__Project.Models.Signature", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OeuvreLocalisation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Signatures");
                });

            modelBuilder.Entity("Hasdrubal__Project.Models.Acquisation", b =>
                {
                    b.HasOne("Hasdrubal__Project.Models.Oeuvre", "Oeuvre")
                        .WithOne("Acquisation")
                        .HasForeignKey("Hasdrubal__Project.Models.Acquisation", "Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Oeuvre");
                });

            modelBuilder.Entity("Hasdrubal__Project.Models.Bibliographie", b =>
                {
                    b.HasOne("Hasdrubal__Project.Models.Oeuvre", "Oeuvre")
                        .WithOne("Bibliographie")
                        .HasForeignKey("Hasdrubal__Project.Models.Bibliographie", "Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Oeuvre");
                });

            modelBuilder.Entity("Hasdrubal__Project.Models.ConservationLocation", b =>
                {
                    b.HasOne("Hasdrubal__Project.Models.Oeuvre", "Oeuvre")
                        .WithOne("ConservationLocation")
                        .HasForeignKey("Hasdrubal__Project.Models.ConservationLocation", "Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Oeuvre");
                });

            modelBuilder.Entity("Hasdrubal__Project.Models.Image", b =>
                {
                    b.HasOne("Hasdrubal__Project.Models.Oeuvre", "Oeuvre")
                        .WithMany("Images")
                        .HasForeignKey("OeuvreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Oeuvre");
                });

            modelBuilder.Entity("Hasdrubal__Project.Models.Oeuvre", b =>
                {
                    b.HasOne("Hasdrubal__Project.Models.Artiste", "Artiste")
                        .WithMany("Oeuvres")
                        .HasForeignKey("ArtisteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Artiste");
                });

            modelBuilder.Entity("Hasdrubal__Project.Models.Pret", b =>
                {
                    b.HasOne("Hasdrubal__Project.Models.Exposition", "Exposition")
                        .WithMany("Prets")
                        .HasForeignKey("ExpositionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Hasdrubal__Project.Models.Oeuvre", "Oeuvre")
                        .WithMany("Prets")
                        .HasForeignKey("OeuvreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Exposition");

                    b.Navigation("Oeuvre");
                });

            modelBuilder.Entity("Hasdrubal__Project.Models.Redaction", b =>
                {
                    b.HasOne("Hasdrubal__Project.Models.Oeuvre", "Oeuvre")
                        .WithOne("Redaction")
                        .HasForeignKey("Hasdrubal__Project.Models.Redaction", "Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Oeuvre");
                });

            modelBuilder.Entity("Hasdrubal__Project.Models.Restauration", b =>
                {
                    b.HasOne("Hasdrubal__Project.Models.Oeuvre", "Oeuvre")
                        .WithOne("Restauration")
                        .HasForeignKey("Hasdrubal__Project.Models.Restauration", "Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Oeuvre");
                });

            modelBuilder.Entity("Hasdrubal__Project.Models.Signature", b =>
                {
                    b.HasOne("Hasdrubal__Project.Models.Oeuvre", "Oeuvre")
                        .WithOne("Signature")
                        .HasForeignKey("Hasdrubal__Project.Models.Signature", "Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Oeuvre");
                });

            modelBuilder.Entity("Hasdrubal__Project.Models.Artiste", b =>
                {
                    b.Navigation("Oeuvres");
                });

            modelBuilder.Entity("Hasdrubal__Project.Models.Exposition", b =>
                {
                    b.Navigation("Prets");
                });

            modelBuilder.Entity("Hasdrubal__Project.Models.Oeuvre", b =>
                {
                    b.Navigation("Acquisation");

                    b.Navigation("Bibliographie");

                    b.Navigation("ConservationLocation");

                    b.Navigation("Images");

                    b.Navigation("Prets");

                    b.Navigation("Redaction");

                    b.Navigation("Restauration");

                    b.Navigation("Signature");
                });
#pragma warning restore 612, 618
        }
    }
}
